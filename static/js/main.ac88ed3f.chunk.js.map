{"version":3,"sources":["resources/resume.pdf","resources/logo.jpg","sections/Introduction/Introduction.js","header-footer/NavBar/NavBar.js","sections/Experience/Experience.js","sections/Proficiency/Proficiency.js","firebase.js","sections/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Introduction","className","id","href","resume","target","src","alt","React","Component","NavBar","logo","Experience","Proficiency","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Contact","props","onNameChanged","event","setState","name","value","onEmailChanged","email","onMessageChanged","message","onSent","state","date","Date","firestore","collection","doc","now","toString","set","then","console","log","alert","preventDefault","onSubmit","this","type","placeholder","onChange","rows","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac88ed3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.abdfb6d9.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo.12395eca.jpg\";","import React from 'react';\r\nimport \"./Introduction.css\";\r\nimport resume from \"../../resources/resume.pdf\"\r\nclass Introduction extends React.Component {\r\n    render() {  \r\n    return (\r\n        <main className=\"information\" id=\"introductionSession\">\r\n        <div className=\"basicInfo\" >\r\n            <h1 className=\"introduction\"> Hi! I'm Thai Nguyen, <br/> a software developer. </h1>\r\n          <h3 className=\"facts\"> Here are some facts about me: </h3>\r\n          <div className=\"facts-list\">\r\n          <li> Hometown: Ho Chi Minh city, Vietnam </li>\r\n          <li> Currently live in: LA, California</li>\r\n          <li> Education: Computer Science at UCSC </li>\r\n          <li> Hobbies: Do Coding challenges, soccer, video games</li>\r\n          </div>\r\n          <a href={resume} target=\"_blank\"><button className=\"resume\"> My Resume </button></a>\r\n        </div>\r\n        <div className=\"profilePicture\">\r\n          <img className=\"slideshow\" src=\"https://lh3.googleusercontent.com/j_NknsA0N0bsvHxZsBqrG_4d8aknP4Bbb20fZCMPlLNr4FpVpJ5KQaHDZxs7xEdXuyJe7rPsKA=w328-h409-no\" alt=\"My profile\"/>\r\n        </div>\r\n      </main>\r\n    );\r\n    }\r\n}\r\n \r\nexport default Introduction;","import React from 'react';\r\nimport \"./NavBar.css\";\r\nimport logo from \"../../resources/logo.jpg\"\r\n\r\nclass NavBar extends React.Component {\r\n    render() {  \r\n    return (\r\n      <nav className=\"topNav\">\r\n        <div className=\"logoWrapper\">\r\n          <img className=\"logo\" src={logo} alt=\"My logo\"/>\r\n        </div>\r\n        <div id=\"blankNavBar\"> </div>\r\n        <div className=\"topButtonsWarper\">\r\n          <a className=\"topButtons\" id=\"aboutButton\" href=\"#informationSession\"> About </a>\r\n          <a className=\"topButtons\" id=\"experienceButton\" href=\"#experienceSession\"> Experience </a>\r\n          <a className=\"topButtons\" id=\"codingProficiencyButton\" href=\"#proficiencySession\"> Technical skills </a>\r\n          <a className=\"topButtons\" id=\"contactButton\" href=\"#contactSession\"> Contact </a>\r\n        </div>\r\n      </nav>\r\n    );\r\n    }\r\n}\r\nexport default NavBar;","import React from 'react';\r\nimport \"./Experience.css\";\r\n\r\nclass Experience extends React.Component {\r\n    render() {  \r\n    return (\r\n        <div className=\"experience\" id=\"experienceSession\">\r\n        <h1 className=\"header\" id=\"header-experience\"> Experience </h1>\r\n        <div className=\"experienceBody\">\r\n          <h2 className=\"project-name\"> .NET Developer Internship at <a className=\"external-link\" href=\"http://www.itd.com.vn/vi\" target=\"_blank\"> ITD</a> company </h2>\r\n          <li className=\"role-experience\"> Developed a desktop application to manage tickets for smart parking lots in a team of 6. </li>\r\n          <li>\tRefactored code and implemented more than 50% new functionalities of the application. </li>\r\n          <li> The application helped parking lots save a significant time as well as money compared to the traditional parking lot </li>\r\n          <br></br>\r\n        </div>\r\n        <div className=\"experienceFooter\">\r\n          <h2 className=\"experienceTech\"> Worked with:</h2>\r\n          <div className=\"TechWarper\">\r\n            <p >.NET</p>\r\n          </div>\r\n          <div className=\"TechWarper\">\r\n            <p>C#</p>\r\n          </div>\r\n          <div className=\"TechWarper\">\r\n            <p>WPF</p>\r\n          </div>\r\n          <div className=\"TechWarper\">\r\n            <p>Subversion</p>\r\n          </div>\r\n          <div className=\"TechWarper\">\r\n            <p>Microsoft Visual Studio</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    }\r\n}\r\nexport default Experience;","import React from 'react';\r\nimport \"./Proficiency.css\";\r\nclass Proficiency extends React.Component {\r\n    render() {  \r\n    return (\r\n        <div className=\"proficiency\" id=\"proficiencySession\">\r\n            <h1 className=\"header\" id=\"header-proficiency\"> Technical skills </h1>\r\n            <div className=\"ListProficiency\">\r\n                <div>\r\n                    <h2>Programming languages</h2>\r\n                    <li>C++</li>\r\n                    <li>C#</li>\r\n                    <li>C</li>\r\n                    <li>Python</li>\r\n                    <li>HTML/CSS/Javascript</li>\r\n                </div>\r\n                <div>\r\n                    <h2>Other Technologies</h2>\r\n                    <li>ReactJS</li>\r\n                    <li>MySQL</li>\r\n                    <li>Github</li>\r\n                    <li>Subversion</li>\r\n                    <li>UNIX</li>\r\n                    <li>Adobe Photoshop</li>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Proficiency;","import * as firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAXogO5NPdOfjVNb3I8bdRfvGgCaLO4ElA\",\r\n    authDomain: \"portfolio-website-2072e.firebaseapp.com\",\r\n    databaseURL: \"https://portfolio-website-2072e.firebaseio.com\",\r\n    projectId: \"portfolio-website-2072e\",\r\n    storageBucket: \"portfolio-website-2072e.appspot.com\",\r\n    messagingSenderId: \"744198698860\",\r\n    appId: \"1:744198698860:web:dbc27b716a5d29e03ae549\",\r\n    measurementId: \"G-96DZZQTLTQ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n\r\n  export default firebase;","import React from 'react';\r\nimport \"./Contact.css\";\r\nimport firebase from \"../../firebase.js\";\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            name: \"\",\r\n            email: \"\",\r\n            message: \"\"\r\n        }\r\n    }\r\n    onNameChanged = event => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n    \r\n      onEmailChanged = event => {\r\n        this.setState({ email: event.target.value });\r\n    };\r\n    \r\n      onMessageChanged = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n    onSent = event => {           \r\n        var message = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            message: this.state.message,\r\n            date: Date()\r\n        }           \r\n        const messageDB = firebase.firestore().collection(\"Messages\")\r\n        messageDB.doc(Date.now().toString()).set(message).then(() => {\r\n            console.log(\"Succeed\");\r\n            alert(\"Message successfully sent. I will reply as soon as possible!\");\r\n            this.setState( {\r\n                name: \"\",\r\n                email: \"\",\r\n                message: \"\"\r\n            })\r\n        })\r\n        event.preventDefault();\r\n    };\r\n    render() {  \r\n    return (\r\n        <div className=\"contact\" id=\"contactSession\">\r\n        <h1 className=\"header\"> Contact </h1>\r\n        <p id=\"contactGreeting\"> Feel free to contact me about anything. Leave your contact and message below :) </p>\r\n        <form className=\"contact-form\" onSubmit={this.onSent}>\r\n            <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"  Your name\" onChange={this.onNameChanged} value={this.state.name}/>\r\n            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"  Your email address\" onChange={this.onEmailChanged} value={this.state.email}/>\r\n            <textarea id=\"message\" placeholder=\" What you want to say :)\" rows=\"6\" onChange={this.onMessageChanged} value={this.state.message}></textarea>\r\n            <div className=\"sendWarper\">\r\n                <button className=\"send-button\" type=\"submit\"> Send </button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    );\r\n    }\r\n}\r\nexport default Contact;","import React, { Component } from \"react\";\nimport Introduction from \"./sections/Introduction/Introduction.js\";\nimport NavBar from \"./header-footer/NavBar/NavBar.js\";\nimport Experience from \"./sections/Experience/Experience.js\";\nimport Proficiency from \"./sections/Proficiency/Proficiency.js\";\nimport Contact from \"./sections/Contact/Contact.js\";\nimport \"./app.css\"\n\nclass App extends Component {\n  render() {\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <NavBar />\n        <Introduction />\n        <Experience />\n        <Proficiency />\n        <Contact />\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
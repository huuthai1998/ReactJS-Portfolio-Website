{"version":3,"sources":["sections/Introduction/Introduction.js","header-footer/NavBar/NavBar.js","sections/Experience/Experience.js","sections/Proficiency/Proficiency.js","sections/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Introduction","class","id","href","target","src","alt","React","Component","NavBar","Experience","Proficiency","Contact","method","action","type","name","placeholder","rows","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mXA0BeA,G,uLArBX,OACI,0BAAMC,MAAM,cAAcC,GAAG,uBAC7B,yBAAKD,MAAM,aACP,wBAAIA,MAAM,gBAAV,yBAA+C,6BAA/C,2BACF,wBAAIA,MAAM,SAAV,mCACA,yBAAKA,MAAM,cACX,qEACA,kEACA,qEACA,oFAEA,uBAAGE,KAAK,qFAAqFC,OAAO,UAAS,4BAAQH,MAAM,UAAd,iBAE/G,yBAAKA,MAAM,kBACT,yBAAKA,MAAM,YAAYI,IAAI,4HAA4HC,IAAI,qB,GAhB1IC,IAAMC,YCkBlBC,G,uLAhBX,OACE,yBAAKR,MAAM,UACP,yBAAKC,GAAG,OAAOG,IAAI,qwBAClBC,IAAI,YACP,yBAAKJ,GAAG,gBAER,yBAAKD,MAAM,cACT,uBAAGA,MAAM,aAAaC,GAAG,cAAcC,KAAK,uBAA5C,WACA,uBAAGF,MAAM,aAAaC,GAAG,mBAAmBC,KAAK,sBAAjD,gBACA,uBAAGF,MAAM,aAAaC,GAAG,0BAA0BC,KAAK,uBAAxD,wBACA,uBAAGF,MAAM,aAAaC,GAAG,gBAAgBC,KAAK,mBAA9C,mB,GAZWI,IAAMC,YCkCZE,G,uLAhCX,OACI,yBAAKT,MAAM,aAAaC,GAAG,qBAC3B,wBAAID,MAAM,SAASC,GAAG,qBAAtB,gBACA,yBAAKD,MAAM,kBACT,wBAAIA,MAAM,gBAAV,iCAAuD,uBAAGA,MAAM,gBAAgBE,KAAK,2BAA2BC,OAAO,UAAhE,QAAvD,aACA,wBAAIH,MAAM,mBAAV,8FACA,uHACA,sJACA,8BAEF,yBAAKA,MAAM,oBACT,wBAAIA,MAAM,kBAAV,iBACA,yBAAKA,MAAM,cACT,oCAEF,yBAAKA,MAAM,cACT,kCAEF,yBAAKA,MAAM,cACT,mCAEF,yBAAKA,MAAM,cACT,0CAEF,yBAAKA,MAAM,cACT,6D,GA3BaM,IAAMC,YC8BhBG,G,uLA7BX,OACI,yBAAKV,MAAM,cAAcC,GAAG,sBACxB,wBAAID,MAAM,SAASC,GAAG,sBAAtB,wBACA,yBAAKD,MAAM,mBACP,6BACI,qDACA,mCACA,kCACA,iCACA,sCACA,oDAEJ,6BACI,kDACA,uCACA,qCACA,sCACA,0CACA,oCACA,sD,GArBMM,IAAMC,YCgBjBI,G,uLAdX,OACI,yBAAKX,MAAM,UAAUC,GAAG,kBACxB,wBAAID,MAAM,UAAV,aACA,uBAAGC,GAAG,mBAAN,qFACA,0BAAMD,MAAM,eAAeY,OAAO,OAAOC,OAAO,mBAC5C,2BAAOC,KAAK,OAAOC,KAAK,OAAOd,GAAG,OAAOe,YAAY,gBACrD,2BAAOF,KAAK,OAAOC,KAAK,QAAQd,GAAG,QAAQe,YAAY,yBACvD,8BAAUf,GAAG,UAAUe,YAAY,2BAA2BC,KAAK,MACnE,4BAAQjB,MAAM,eAAd,gB,GAVUM,IAAMC,YCsBbW,G,uLAdb,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GATUZ,cCIEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2c5739e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Introduction.css\";\r\n\r\nclass Introduction extends React.Component {\r\n    render() {  \r\n    return (\r\n        <main class=\"information\" id=\"introductionSession\">\r\n        <div class=\"basicInfo\" >\r\n            <h1 class=\"introduction\"> Hi! I'm Thai Nguyen, <br/> a software developer. </h1>\r\n          <h3 class=\"facts\"> Here are some facts about me: </h3>\r\n          <div class=\"facts-list\">\r\n          <li> Hometown: Ho Chi Minh city, Vietnam </li>\r\n          <li> Currently live in: LA, California</li>\r\n          <li> Education: Computer Science at UCSC </li>\r\n          <li> Hobbies: Do Coding challenges, soccer, video games</li>\r\n          </div>\r\n          <a href=\"https://drive.google.com/file/d/1muQPT0PHQEWa7HsNyd2IiiBfVym05PlX/view?usp=sharing\" target=\"_blank\"><button class=\"resume\"> My Resume </button></a>\r\n        </div>\r\n        <div class=\"profilePicture\">\r\n          <img class=\"slideshow\" src=\"https://lh3.googleusercontent.com/j_NknsA0N0bsvHxZsBqrG_4d8aknP4Bbb20fZCMPlLNr4FpVpJ5KQaHDZxs7xEdXuyJe7rPsKA=w328-h409-no\" alt=\"My profile\"/>\r\n        </div>\r\n      </main>\r\n    );\r\n    }\r\n}\r\n \r\nexport default Introduction;","import React from 'react';\r\nimport \"./NavBar.css\";\r\n\r\nclass NavBar extends React.Component {\r\n    render() {  \r\n    return (\r\n      <nav class=\"topNav\">\r\n          <img id=\"logo\" src=\"https://lh3.googleusercontent.com/ftD7ebgWP4JnSqJg2ccywje4EtuBhXSBxDB6lF8IhxdI_1T3gBqhuYz_1XVO3AJRMymfsY7nAKh4WojY8lCInBkq25c3GfdHYntiI5E1CpqrCoUhvTq47XGFZSgBZ84Rf-NC-Iem3FiNVJpDDgfzCe85MkfvU_Icr00I2J2-dpwX65nbEmAdfEoeNNIBfWB7p8ypNAX0PtT68XAGra9pkoWtaGyx2SG80wmSlhyynWxKxFe-hAVk_ZgXbqBxBsiyZYpaOGeyX8JsRmCsoq9EgVfPiMy4mx7WYu03cJENquWE-zATF17VXepsCzXNSI628XeGcuqhLQTAIFuRacBiAw9Xj3dffFxsMO1hcTzzINYhTcjXomty__FQFSQCj8tNE_qlHk9PzFb6tN6QD3IUcY6u0VClXyIah4tY9CeTcwjy8P09ShZ3F0CLrCzNzNIizuFnD2Kw179wpyBBsSBTo0KDg7KKfCU2atm_j655WtByfGpiphrFiHLRA5xidsgCUG2Brvm9obkMpMJWvoe-vgVvaY4ZfthkPcLGrvDkUBnk6XqlmFTC0kOZMkB4dXE3uLFU9fVhm238tKQCbi14t4wodSnWhRTiGjWDGqcOi90T602tqN1LJwQe2kr7AbEuTIXDi7QVE1Si6y207xmOq_eZbktTaB8d-mtRhk_h1Qc4gl1X5JbOpV8fwjr3nf71IBNHHvmO36JR35JQy-kIIyUx=s814-no\"\r\n           alt=\"My logo\"/>\r\n        <div id=\"blankNavBar\">\r\n        </div>\r\n        <div class=\"topButtons\">\r\n          <a class=\"topButtons\" id=\"aboutButton\" href=\"#informationSession\"> About </a>\r\n          <a class=\"topButtons\" id=\"experienceButton\" href=\"#experienceSession\"> Experience </a>\r\n          <a class=\"topButtons\" id=\"codingProficiencyButton\" href=\"#proficiencySession\"> Coding proficiency </a>\r\n          <a class=\"topButtons\" id=\"contactButton\" href=\"#contactSession\"> Contact </a>\r\n        </div>\r\n      </nav>\r\n    );\r\n    }\r\n}\r\nexport default NavBar;","import React from 'react';\r\nimport \"./Experience.css\";\r\n\r\nclass Experience extends React.Component {\r\n    render() {  \r\n    return (\r\n        <div class=\"experience\" id=\"experienceSession\">\r\n        <h1 class=\"header\" id=\"header-experience\"> Experience </h1>\r\n        <div class=\"experienceBody\">\r\n          <h2 class=\"project-name\"> .NET Developer Internship at <a class=\"external-link\" href=\"http://www.itd.com.vn/vi\" target=\"_blank\"> ITD</a> company </h2>\r\n          <li class=\"role-experience\"> Developed a desktop application to manage tickets for smart parking lots in a team of 6. </li>\r\n          <li>\tRefactored code and implemented more than 50% new functionalities of the application. </li>\r\n          <li> The application helped parking lots save a significant time as well as money compared to the traditional parking lot </li>\r\n          <br></br>\r\n        </div>\r\n        <div class=\"experienceFooter\">\r\n          <h2 class=\"experienceTech\"> Worked with:</h2>\r\n          <div class=\"TechWarper\">\r\n            <p >.NET</p>\r\n          </div>\r\n          <div class=\"TechWarper\">\r\n            <p>C#</p>\r\n          </div>\r\n          <div class=\"TechWarper\">\r\n            <p>WPF</p>\r\n          </div>\r\n          <div class=\"TechWarper\">\r\n            <p>Subversion</p>\r\n          </div>\r\n          <div class=\"TechWarper\">\r\n            <p>Microsoft Visual Studio</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    }\r\n}\r\nexport default Experience;","import React from 'react';\r\nimport \"./Proficiency.css\";\r\nclass Proficiency extends React.Component {\r\n    render() {  \r\n    return (\r\n        <div class=\"proficiency\" id=\"proficiencySession\">\r\n            <h1 class=\"header\" id=\"header-proficiency\"> Coding proficiency </h1>\r\n            <div class=\"ListProficiency\">\r\n                <div>\r\n                    <h2>Programming languages</h2>\r\n                    <li>C++</li>\r\n                    <li>C#</li>\r\n                    <li>C</li>\r\n                    <li>Python</li>\r\n                    <li>HTML/CSS/Javascript</li>\r\n                </div>\r\n                <div>\r\n                    <h2>Other Technologies</h2>\r\n                    <li>ReactJS</li>\r\n                    <li>MySQL</li>\r\n                    <li>Github</li>\r\n                    <li>Subversion</li>\r\n                    <li>UNIX</li>\r\n                    <li>Adobe Photoshop</li>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Proficiency;","import React from 'react';\r\nimport \"./Contact.css\";\r\nclass Contact extends React.Component {\r\n    render() {  \r\n    return (\r\n        <div class=\"contact\" id=\"contactSession\">\r\n        <h1 class=\"header\"> Contact </h1>\r\n        <p id=\"contactGreeting\"> Feel free to contact me about anything. Leave your contact and message below :) </p>\r\n        <form class=\"contact-form\" method='POST' action=\"submission.html\">\r\n            <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"  Your name\" />\r\n            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"  Your email address\"/>\r\n            <textarea id=\"message\" placeholder=\" What you want to say :)\" rows=\"6\"></textarea>\r\n            <button class=\"send-button\"> Send </button>\r\n        </form>\r\n      </div>\r\n    );\r\n    }\r\n}\r\nexport default Contact;","import React, { Component } from \"react\";\nimport Introduction from \"./sections/Introduction/Introduction.js\";\nimport NavBar from \"./header-footer/NavBar/NavBar.js\";\nimport Experience from \"./sections/Experience/Experience.js\";\nimport Proficiency from \"./sections/Proficiency/Proficiency.js\";\nimport Contact from \"./sections/Contact/Contact.js\";\nimport \"./app.css\"\n\nclass App extends Component {\n  render() {\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <NavBar />\n        <Introduction />\n        <Experience />\n        <Proficiency />\n        <Contact />\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}